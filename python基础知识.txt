变量： 变量就是一个盒子，存放任何你想要学习的东西
赋值： 把想存的东西存进变量这个盒子里，比如 a = 1 ,a 变量名a 赋值符号 =  值 1，变量大小写敏感
打印函数 print()
字符串：一段文字，可以用 '字符串'  "字符串"  '''字符串''' ，单引号、双引号、三引号来包裹
运算符号： 加+ 减- 乘* 除/
replace用来替换字符串中的字符，格式： 字符串.replace('原字符','新字符')
字符串格式化：向字符串中插入内容
方法一、'含有%s的字符串'%'要插入的字符串'
方法二、'含有{}的字符串'.format('要插入的字符串')

切片：取字符串中的某部分内容，分正序、倒序两种
正序：print(a[2:5]) 表示从第三个字符取到第5个字符，包前不包后，比如取前3个print(a[:3])
倒序：print(a[-3:]) 取到后三个字符



常见数据结构 
列表 [数据1,数据2,数据3,数据4]: 存入若干种数据,允许增加删除,只能根据位置读出
字典 {'数据1':数据1的值,'数据2':数据2的值} ：键值对的形式
元组 (数据1,数据2,数据3,数据4) : 不允许修改
集合 {数据1,数据2,数据3,数据4} :
>>> a = 1
>>> a_list = ['a', 'b', a, ['x', 'y']]
>>> print(a_list)
['a', 'b', 1, ['x', 'y']]
>>> a_list.append(3)
>>> print(a_list)
['a', 'b', 1, ['x', 'y'], 3]
>>> a_list.remove(1)
>>> print(a_list)
['a', 'b', ['x', 'y'], 3]
>>> a_list.append(1)
>>> a_list.append(3)
>>> print(a_list)
['a', 'b', ['x', 'y'], 3, 1, 3]
>>> a_list.remove(3)
>>> print(a_list)
['a', 'b', ['x', 'y'], 1, 3]


条件判断
>>> a = 1
>>> b = 3
>>> if b > a :
...    print("b大于a")
... else:
...    print("b不大于a")
...
b大于a

循环
a = [1, 2, 3, 4, 5, 6]
for i in a :
    j = i + 1
    print(j)

print('-'*20)
print(i)

'''
打印结果：for循环加后面的 print 结果 
3
4
5
6
7
--------------------
6
原因后面的 print 没有缩进不属于 for 循环
'''

# range() 函数包前不包后
for i in range(1,11) :
    j = i + 1
    print(j)

print('-'*20)
print(i)

'''
2
3
4
5
6
7
8
9
10
11
--------------------
10
'''


python 函数、第三方库
内建函数
a = 1
print(type(a))
# 打印结果 ： <class 'int'>
type() : 判断变量类型，常用于类型转换
len() : 字符串的长度,int类型不支持
round() : 保留几位小数的函数。如 round(e, 3) ,且无法填充，只能减不能加
input() : 交互输入

# 自定义函数: 求梯形面积
def trapezoid_area(base_up, base_down, height):
    area = (base_up + base_down)*height/2
    print(area)

# 调用函数并传参
# 方法1： 顺序传参
trapezoid_area(5,6,3)

# 方法2： 指定参数
trapezoid_area(height=3,base_up=5,base_down=6)

# 函数内定义的变量只能在函数内部使用，不能在函数外部调用。

# 库
# 别人的函数封装成库
# 安装第三方库
pip  install  库名

例： pip  install  xlrd 







